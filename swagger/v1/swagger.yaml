---
openapi: 3.0.1
info:
  title: Operation challenge
  version: v1
paths:
  "/api/v1/accounts":
    get:
      summary: list accounts
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
    post:
      summary: create account
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: account created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    name:
                      type: string
                    client_name:
                      type: string
                    manager_name:
                      type: string
                  required:
                  - name
              required:
              - account
  "/api/v1/accounts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show account
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update account
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: account updated
        '422':
          description: invalid request
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    name:
                      type: string
                    client_name:
                      type: string
                    manager_name:
                      type: string
                  required:
                  - name
              required:
              - account
    put:
      summary: update account
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: account updated
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    name:
                      type: string
                    client_name:
                      type: string
                    manager_name:
                      type: string
                  required:
                  - name
              required:
              - account
    delete:
      summary: delete account
      tags:
      - Api::V1::Accounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    english_level:
                      type: string
                    knowledge:
                      type: string
                    cv_url:
                      type: string
                    access_level:
                      type: string
                      enum:
                      - standart
                      - admin
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user updated
        '422':
          description: invalid request
        '401':
          description: Unauthorized
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    english_level:
                      type: string
                    knowledge:
                      type: string
                    cv_url:
                      type: string
                    access_level:
                      type: string
                      enum:
                      - standart
                      - admin
                  required:
                  - email
                  - password
              required:
              - user
    put:
      summary: update user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user updated
        '422':
          description: invalid request
        '401':
          description: Unauthorized
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    english_level:
                      type: string
                    knowledge:
                      type: string
                    cv_url:
                      type: string
                    access_level:
                      type: string
                      enum:
                      - standart
                      - admin
                  required:
                  - email
                  - password
              required:
              - user
    delete:
      summary: delete user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/users/show_me":
    get:
      summary: show_me user
      tags:
      - Api::V1::Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v2/user_accounts":
    get:
      summary: list user_accounts
      tags:
      - Api::V2::UserAccounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: search_params
        in: query
        schema:
          type: object
          properties:
            users:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            accounts:
              type: object
              properties:
                name:
                  type: string
                client_name:
                  type: string
            in_date:
              type: string
            out_date:
              type: string
      responses:
        '200':
          description: successful
    post:
      summary: create user_accounts
      tags:
      - Api::V2::UserAccounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: user account created
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                account_id:
                  type: string
                in_date:
                  type: string
                out_date:
                  type: string
              required:
              - user_id
              - account_id
  "/api/v2/user_accounts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    patch:
      summary: update user_account
      tags:
      - Api::V2::UserAccounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: account updated
        '422':
          description: invalid request
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                in_date:
                  type: string
                out_date:
                  type: string
    put:
      summary: update user_accounts
      tags:
      - Api::V2::UserAccounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: account updated
        '422':
          description: invalid request
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                in_date:
                  type: string
                out_date:
                  type: string
    delete:
      summary: delete user_accounts
      tags:
      - Api::V2::UserAccounts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/login":
    post:
      summary: Create Session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: session created
        '401':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/logout":
    delete:
      summary: delete session
      tags:
      - Sessions
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '204':
          description: session revoked
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
